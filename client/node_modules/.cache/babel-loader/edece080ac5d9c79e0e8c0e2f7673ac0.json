{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInSTart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInSTart)]);\n}","map":{"version":3,"sources":["C:/Users/PROBOOK/Desktop/react_projects/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInSTart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,mBAAR,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,QAAgG,gBAAhG;AAEA,SACKC,IADL,EAEKC,cAFL,EAGKC,yBAHL,QAIW,+BAJX;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAnB;AACA,UAAMK,OAAO,GAAG,MAAMb,IAAI,CAAES,yBAAF,EAA6BE,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACI,mBAAmB,CAAC;AAACa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AACzD,MAAI;AACA,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMT,OAAO,GAAG,MAAMb,IAAI,CAAES,yBAAF,EAA6BE,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,kBAAkB,CAAC;AAACW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAnB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EACZf,gBADY,CAAhB;AAEH;AAAA;AAED,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AACD,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM3B,GAAG,CAAC,CACND,IAAI,CAACwB,mBAAD,CADE,EAENxB,IAAI,CAAC0B,kBAAD,CAFE,CAAD,CAAT;AAKH","sourcesContent":["import {takeLatest, put, call, all} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\r\n\r\nimport {\r\n     auth,\r\n     googleProvider, \r\n     createUserProfileDocument\r\n    } from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle() {\r\n\r\n    try {\r\n        const user = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call (createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error) {\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signInWithEmail({payload:{email, password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password); \r\n        const userRef = yield call (createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data() }));\r\n    \r\n    } catch (error) {\r\n        yield put(emailSignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSignInSTart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInSTart)\r\n    \r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}