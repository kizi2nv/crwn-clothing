{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; //import createSagaMiddleware from 'redux-saga';  \n\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer'; //import rootSaga from './root-saga';\n//import { fetchCollectionsStart } from './shop/shop.actions';\n//const sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //sagaMiddleware.run( fetchCollectionsStart);  \n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/PROBOOK/Desktop/react_projects/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","thunk","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;AACA;AAEA;;AAEA,MAAMC,WAAW,GAAG,CAACF,KAAD,CAApB;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,MAAjB;AACH;;AAED,OAAO,MAAMQ,KAAK,GAAGX,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGK,WAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\r\nimport {persistStore} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n//import createSagaMiddleware from 'redux-saga';  \r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root-reducer';\r\n//import rootSaga from './root-saga';\r\n//import { fetchCollectionsStart } from './shop/shop.actions';\r\n\r\n//const sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n//sagaMiddleware.run( fetchCollectionsStart);  \r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store, persistor};\r\n\r\n"]},"metadata":{},"sourceType":"module"}