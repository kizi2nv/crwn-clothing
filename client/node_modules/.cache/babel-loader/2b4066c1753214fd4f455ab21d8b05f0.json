{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PROBOOK\\\\Desktop\\\\react_projects\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // import {auth, signInWithGoogle} from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        value: email,\n        type: \"email\",\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: [' ', \"sign in With Google\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"GVCbk76bIrArYLoZaKvlByu7ajc=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/PROBOOK/Desktop/react_projects/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB,C,CAEA;;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,+BAAlD;AAEA,OAAO,uBAAP;;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAACD,EAAAA,gBAAD;AAAmBD,EAAAA;AAAnB,CAAD,KAA2C;AAAA;;AAEtD,QAAM,CAACG,eAAD,EAAkBC,cAAlB,IAAoCR,QAAQ,CAAC;AAC/CS,IAAAA,KAAK,EAAC,EADyC;AAE/CC,IAAAA,QAAQ,EAAC;AAFsC,GAAD,CAAlD;AAKA,QAAK;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,eAAzB;;AAEJ,QAAMI,YAAY,GAAI,MAAOC,KAAP,IAAgB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAGAR,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AAEH,GAND;;AAQA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC1B,UAAK;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiBJ,KAAK,CAACK,MAA5B;AAEAT,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACS,IAAD,GAAOD;AAA5B,KAAD,CAAd;AACH,GAJD;;AAMQ,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEJ,YAA1B;AAAA,8BACI,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,KAAK,EAAEF,KAFR;AAGC,QAAA,IAAI,EAAC,OAHN;AAIC,QAAA,YAAY,EAAEK,YAJf;AAKC,QAAA,KAAK,EAAC,OALP;AAMC,QAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,KAAK,EAAEJ,QAHP;AAIA,QAAA,YAAY,EAAEI,YAJd;AAKA,QAAA,KAAK,EAAC,UALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAe,UAAA,OAAO,EAAEV,iBAAxB;AAA2C,UAAA,cAAc,MAAzD;AAAA,qBACK,GADL,yBAGM,GAHN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CA5DL;;GAAME,M;;KAAAA,M;;AA+DN,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAACf,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACI,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACd,gBAAgB,CAAC;AAACI,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFX,CAAL,CAAnC;;AAIA,eAAeT,OAAO,CAClB,IADkB,EAElBiB,kBAFkB,CAAP,CAGbZ,MAHa,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n// import {auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\n\r\n\r\n \r\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\r\n\r\n    const [userCredentials, setCredentials] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const{email, password} = userCredentials;\r\n\r\nconst handleSubmit =  async  event => {\r\n    event.preventDefault();\r\n\r\n\r\n    emailSignInStart(email, password);\r\n\r\n};\r\n\r\nconst handleChange = event => {\r\n    const{ value, name} = event.target;\r\n\r\n    setCredentials({...userCredentials, [name]:value});\r\n} ;\r\n \r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <FormInput\r\n                     name=\"email\" \r\n                     value={email}\r\n                     type=\"email\"\r\n                     handleChange={handleChange}\r\n                     label=\"email\"\r\n                     required\r\n                    />\r\n                    \r\n\r\n                    <FormInput \r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    label=\"password\"\r\n                    required\r\n                    />\r\n                   \r\n                <div className='buttons'>\r\n                    <CustomButton type=\"submit\" >Sign In</CustomButton>\r\n                    <CustomButton  onClick={googleSignInStart} isGoogleSignIn>\r\n                        {' '}\r\n                         sign in With Google\r\n                         {' '}\r\n                         </CustomButton>\r\n                </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SignIn);"]},"metadata":{},"sourceType":"module"}