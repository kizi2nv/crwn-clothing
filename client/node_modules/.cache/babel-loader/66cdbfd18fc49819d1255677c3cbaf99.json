{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/PROBOOK/Desktop/react_projects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAQ;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAR,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,uBAD8B;AAEpDD,EAAAA,OAAO,EAACE;AAF4C,CAAL,CAA5C;AAKP,OAAO,MAAMC,0BAA0B,GAAI,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEPW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpC,YAAMX,cAAc,GAAGL,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAAEP,uBAAuB,CAACC,cAAD,CAAzB,CAAR;AAED,KAJA,EAKAY,KALA,CAKMC,KAAK,IAAIP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CALvB;AAOA,GAXG;AAaH,CAdM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = ()  => ({\r\n    type: ShopActionTypes.FETCH_COLLECTION_START,\r\n    \r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.fetchCollectionsFailure,\r\n    payload:errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync =  () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n collectionRef.get().then(snapshot => {\r\n  const collectionsMap = convertCollectionsSnapshotToMap(snapshot);  \r\n  dispatch (fetchCollectionsSuccess(collectionsMap));\r\n  \r\n})\r\n.catch(error => dispatch(fetchCollectionsFailure(error.message)) );\r\n \r\n};\r\n\r\n}"]},"metadata":{},"sourceType":"module"}