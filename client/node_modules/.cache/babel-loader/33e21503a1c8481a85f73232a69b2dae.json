{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PROBOOK\\\\Desktop\\\\react_projects\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-Spinner/with-Spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 60\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/PROBOOK/Desktop/react_projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,mBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF0B;AAAA,SAMlCC,uBANkC,GAMR,IANQ;AAAA;;AAQlCC,EAAAA,iBAAiB,GAAG;AACpB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEJ,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAC;AAAV,OAAd;AAGD,KAN8B,CAA/B;AAOK;;AAELU,EAAAA,MAAM,GAAI;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AAEF,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEL,oBAAE,KAAF;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAlC;AAAqC,MAAA,MAAM,EAAGT,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,eAIL,oBAAC,KAAD;AACA,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADpB;AAEA,MAAA,MAAM,EAAGT,KAAD,iBAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJK,CAAP;AASC;;AAlCmC;;AAqCtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAM;AACrCrB,EAAAA,iBAAiB,EAAEe,cAAc,IACjCM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF6B,CAAN,CAAnC;;AAKA,eAAepB,OAAO,CAClB,IADkB,EAElByB,kBAFkB,CAAP,CAGThB,QAHS,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from  'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\n\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport WithSpinner from '../../components/with-Spinner/with-Spinner.component';\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n     \r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n\r\nthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n  const collectionsMap = convertCollectionsSnapshotToMap(snapshot);  \r\n  updateCollections(collectionsMap);\r\n  this.setState({ loading:false });\r\n \r\n   \r\n});\r\n    }\r\n\r\nrender () {\r\n    const {match} = this.props;\r\n    const {loading } =this.state;\r\n    \r\n  return(<div className='shop-page'>\r\n    \r\n    < Route exact path={`${match.path}`} render={(props) =><CollectionPageWithSpinner isLoading={loading} {...props} /> }/>\r\n   \r\n    <Route  \r\n    path={`${match.path}/:collectionId`} \r\n    render={(props)=><CollectionPageWithSpinner isLoading={loading} {...props} />}\r\n    />\r\n</div>\r\n )};\r\n}  \r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n    updateCollections: collectionsMap => \r\n    dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect (\r\n    null,\r\n    mapDispatchToProps\r\n    )(ShopPage);\r\n  "]},"metadata":{},"sourceType":"module"}