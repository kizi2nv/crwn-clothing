{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAH4wjlKZsMYhCXAl__BOwzMrVT47DoA6k\",\n  authDomain: \"mycrwn.firebaseapp.com\",\n  databaseURL: \"https://mycrwn.firebaseio.com\",\n  projectId: \"mycrwn\",\n  storageBucket: \"mycrwn.appspot.com\",\n  messagingSenderId: \"36369318121\",\n  appId: \"1:36369318121:web:285d2da3256b5f6cc8b078\",\n  measurementId: \"G-DC017JZZR7\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalDAta) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc('users/hjhvvjh');\n  const snapshot = await userRef.get();\n  console.log(snapshot); //if (!snapshot.exists){\n  //const{displayName, email} = userAuth;\n  //const createdAt = new Date();\n  //try{ \n  //await userRef.set({\n  //displayName,\n  //email,\n  //createdAt,\n  //...additionalDAta\n  //})\n  //} catch(error) {\n  //console.log('error creating user', error.message);\n  //}\n  //   }\n  //  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/PROBOOK/Desktop/react_projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalDAta","userRef","firestore","doc","snapshot","get","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AAEA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,wBAFD;AAGXC,EAAAA,WAAW,EAAE,+BAHF;AAIXC,EAAAA,SAAS,EAAE,QAJA;AAKXC,EAAAA,aAAa,EAAE,oBALJ;AAMXC,EAAAA,iBAAiB,EAAE,aANR;AAOXC,EAAAA,KAAK,EAAE,0CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAmC;AAE1E,MAAI,CAAED,QAAN,EAAgB;AAClB,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAc,eAAd,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAN2E,CAQ1E;AACE;AACA;AACN;AACE;AACA;AACA;AACA;AACA;AACF;AAEA;AACE;AAEF;AAGC;AAEC;AAEC,CA7BM;AA+BPhB,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AAEA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AAEP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\n\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAH4wjlKZsMYhCXAl__BOwzMrVT47DoA6k\",\r\n    authDomain: \"mycrwn.firebaseapp.com\",\r\n    databaseURL: \"https://mycrwn.firebaseio.com\",\r\n    projectId: \"mycrwn\",\r\n    storageBucket: \"mycrwn.appspot.com\",\r\n    messagingSenderId: \"36369318121\",\r\n    appId: \"1:36369318121:web:285d2da3256b5f6cc8b078\",\r\n    measurementId: \"G-DC017JZZR7\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalDAta) =>{\r\n    \r\n    if (! userAuth) return;\r\n  const userRef = firestore.doc('users/hjhvvjh');\r\n\r\n  const snapshot = await userRef.get();  \r\n   console.log(snapshot);\r\n   \r\n    //if (!snapshot.exists){\r\n      //const{displayName, email} = userAuth;\r\n      //const createdAt = new Date();\r\n//try{ \r\n  //await userRef.set({\r\n  //displayName,\r\n  //email,\r\n  //createdAt,\r\n  //...additionalDAta\r\n//})\r\n\r\n//} catch(error) {\r\n  //console.log('error creating user', error.message);\r\n  \r\n//}\r\n\r\n\r\n //   }\r\n\r\n  //  return userRef;\r\n    \r\n  } ;\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;\r\n  "]},"metadata":{},"sourceType":"module"}